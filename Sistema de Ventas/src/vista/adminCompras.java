package vista;
import javax.swing.JOptionPane;
import controlador.ConsultasProductoProvedor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import modelo.Compra;
import java.util.Date;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import modelo.Producto;
public class adminCompras extends javax.swing.JFrame {
    //Crea variables para el carrito de compras
    private int idProd = 0;
    private ArrayList<Double> total = new ArrayList<Double>();
    private ArrayList<Producto> productoCarrito = new ArrayList<Producto>();
    private ArrayList<String> cantidadCarrito = new ArrayList<String>();
    double totalMonto = 0;
    //Variables para la obtencion de la fecha de la pestaña de Registro
    private Calendar cal = Calendar.getInstance();
    private DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form adminCompras
     */
    public adminCompras() {
        initComponents();
        //Establece el título
        this.setTitle("Compras");
        //Escribe la fecha en el jText de la fecha de la pestaña de Registro
        txtFechaCompra.setText(formato.format(cal.getTime()).toString());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtIdCompraR = new javax.swing.JTextField();
        txtFechaCompra = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        btnBuscarProveedor = new javax.swing.JButton();
        btnAñadirCompra = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProductos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCarrito = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtCantidadCompra = new javax.swing.JTextField();
        txtMontoCompra = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtRegistrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtIdCompra = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtMonto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Id Compra : ");

        jLabel2.setText("Fecha :");

        jLabel3.setText("Proveedor");

        txtIdCompraR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdCompraRKeyTyped(evt);
            }
        });

        txtFechaCompra.setEditable(false);
        txtFechaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaCompraActionPerformed(evt);
            }
        });

        btnBuscarProveedor.setText("BUSCAR");
        btnBuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProveedorActionPerformed(evt);
            }
        });

        btnAñadirCompra.setText("AÑADIR");
        btnAñadirCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirCompraActionPerformed(evt);
            }
        });

        jLabel4.setText("Productos ");

        tableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Producto", "Marca", "Precio Compra", "Existencias"
            }
        ));
        tableProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProductos);

        tableCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Producto", "Marca", "Descripcion", "Total"
            }
        ));
        jScrollPane2.setViewportView(tableCarrito);

        jLabel5.setText("Cantidad : ");

        txtCantidadCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadCompraKeyTyped(evt);
            }
        });

        txtMontoCompra.setEditable(false);

        jLabel11.setText("Monto Total");

        txtRegistrar.setText("REGISTAR COMPRA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIdCompraR)
                                    .addComponent(txtFechaCompra)
                                    .addComponent(txtProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(57, 57, 57)
                                .addComponent(txtCantidadCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAñadirCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(txtMontoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(txtRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdCompraR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAñadirCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtCantidadCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Registrar Compra", jPanel1);

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Producto", "Marca", "Descripción", "Precio Compra", "Precio Mayoreo", "Precio Menudeo", "Existencias"
            }
        ));
        jScrollPane3.setViewportView(tblProductos);

        jLabel6.setText("Id Compra : ");

        jLabel7.setText("Fecha :");

        jLabel8.setText("Monto :");

        jLabel9.setText("Productos :");

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtFecha.setEditable(false);
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        txtMonto.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMonto, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(txtFecha)
                                    .addComponent(txtIdCompra))
                                .addGap(87, 87, 87)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consultar Compra", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProveedorActionPerformed
        if (txtProveedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Rellene el campo de proveedor"); //Valida que los campos estén llenos
        } else {
            try {
                ConsultasProductoProvedor buscar = new ConsultasProductoProvedor();
                ArrayList<Producto> pds = new ArrayList<Producto>();
                pds = buscar.arrayProductos(Integer.parseInt(txtProveedor.getText()));
                if (pds.isEmpty()) {  //Revisa que esté vacío
                    JOptionPane.showMessageDialog(null, "No existe Compra con ese ID");
                    //Establece el modelo de la tabla para que no sea editable
                    DefaultTableModel modelo = new DefaultTableModel(){
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    };
                    //Aplica el modelo a la tabl
                    tableProductos.setModel(modelo);
                    //Establece el nombre de las columnas
                    modelo.addColumn("Id Producto");
                    modelo.addColumn("Marca");
                    modelo.addColumn("Descripcion");
                    modelo.addColumn("Precio de Compra");
                    modelo.addColumn("Existencias");
                } else {
                    //Establece el modelo de la tabla para que no sea editable
                    DefaultTableModel modelo = new DefaultTableModel() {
                        @Override
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    };
                    //Establece el modelo de la tabla
                    tableProductos.setModel(modelo);
                    //Establece las columnas de la tabla
                    modelo.addColumn("Id Producto");
                    modelo.addColumn("Marca");
                    modelo.addColumn("Descripcion");
                    modelo.addColumn("Precio de Compra");
                    modelo.addColumn("Existencias");
                    //Crea un arreglo de objetos para llenar la tabla
                    Object[] o = null;
                    //Llena la tabla con las filas
                    for (int i = 0; i < pds.size(); i++) {
                        modelo.addRow(o);
                        modelo.setValueAt(pds.get(i).getId(), i, 0);
                        modelo.setValueAt(pds.get(i).getMarca(), i, 1);
                        modelo.setValueAt(pds.get(i).getDescripcion(), i, 2);
                        modelo.setValueAt(pds.get(i).getPrecioCompra(), i, 3);
                        modelo.setValueAt(pds.get(i).getExistencias(), i, 4);
                    }
                }

            } catch (NullPointerException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "No existe Compra con ese ID");
            }
        }
    }//GEN-LAST:event_btnBuscarProveedorActionPerformed

    private void btnAñadirCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirCompraActionPerformed
        if (txtCantidadCompra.getText().isEmpty() || Integer.parseInt(txtCantidadCompra.getText()) == 0 || idProd == 0) { //Verifica que los campos estén llenos
            JOptionPane.showMessageDialog(null, "Llene todos los campos");
        } else {
            ConsultasProductoProvedor buscar = new ConsultasProductoProvedor();
            Producto pr = new Producto();
            //Busca y mapea el producto
            pr = buscar.consultaProducto(idProd);
            //Añade el producto al carrito de compras
            productoCarrito.add(pr);
            //Calcula el total de cada compra multiplicando el precio por la cantidad
            total.add((pr.getPrecioCompra() * Double.parseDouble(txtCantidadCompra.getText())));
            //Añade la cantidad productos al arreglo del carrito de compras
            cantidadCarrito.add(txtCantidadCompra.getText());
            //Crea la Tabla con un modelo para que no sea editable
            DefaultTableModel modelo = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            //Aplica el modelo
            tableCarrito.setModel(modelo);
            //Crea las columnas de la tabla
            modelo.addColumn("Id Producto");
            modelo.addColumn("Marca");
            modelo.addColumn("Descripcion");
            modelo.addColumn("Total");
            //Crea un arreglo de objetos para las filas de la tabla
            Object[] o = null;
            //Llena la tabla con las filas
            for (int i = 0; i < productoCarrito.size(); i++) {
                modelo.addRow(o);
                modelo.setValueAt(productoCarrito.get(i).getId(), i, 0);
                modelo.setValueAt(productoCarrito.get(i).getMarca(), i, 1);
                modelo.setValueAt(productoCarrito.get(i).getDescripcion(), i, 2);
                modelo.setValueAt("$" + total.get(i), i, 3);
            }
            //Calcula el total de la compra con base a el precio de los productos
            for (int i = 0; i < total.size(); i++) {
                totalMonto += total.get(i);
            }
            //Pone el total en el jText
            txtMontoCompra.setText("$ " + Double.toString(totalMonto));
        }
    }//GEN-LAST:event_btnAñadirCompraActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        
    }//GEN-LAST:event_txtFechaActionPerformed

    private void txtFechaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaCompraActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtIdCompra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Ingresa un ID"); //Valida que el campo no esté vacío
        } else {
            ConsultasProductoProvedor buscar = new ConsultasProductoProvedor();
            try {
                //Establece la fecha de compra en la pestaña de Consulta
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Compra compra = buscar.consultaCompra(Integer.parseInt(txtIdCompra.getText()));
                txtFecha.setText(dateFormat.format(compra.getFecha()));
                txtMonto.setText("$ " + compra.getMonto());
                //Establece el modelo de la tabla para que no sea editable
                DefaultTableModel modelo = new DefaultTableModel() {
                    @Override
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                };
                //Aplica el modelo
                tblProductos.setModel(modelo);
                //Pone los encabezados de las columnas
                modelo.addColumn("Id Producto");
                modelo.addColumn("Marca");
                modelo.addColumn("Descripcion");
                modelo.addColumn("Precio de Compra");
                modelo.addColumn("Venta mayoreo");
                modelo.addColumn("Venta menudeo");
                modelo.addColumn("Existencias");
                //Crea un arreglo de objetos para las filas
                Object[] o = null;
                //Rellena las filas
                for (int i = 0; i < compra.getPds().size(); i++) {
                    modelo.addRow(o);
                    modelo.setValueAt(compra.getPds().get(i).getId(), i, 0);
                    modelo.setValueAt(compra.getPds().get(i).getMarca(), i, 1);
                    modelo.setValueAt(compra.getPds().get(i).getDescripcion(), i, 2);
                    modelo.setValueAt(compra.getPds().get(i).getPrecioCompra(), i, 3);
                    modelo.setValueAt(compra.getPds().get(i).getPrecioVentaMayoreo(), i, 4);
                    modelo.setValueAt(compra.getPds().get(i).getPrecioVentaMenudeo(), i, 5);
                    modelo.setValueAt(compra.getPds().get(i).getExistencias(), i, 6);
                }
            } catch (NullPointerException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "No existe Compra con ese ID");
            } finally {

            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        //Limpia los campos
        txtIdCompra.setText("");
        txtFecha.setText("");
        txtFecha.setText("");
        txtMonto.setText("");
        //Establece el modelo para que la tabla no sea editable
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        //Aplica el modelo a la tabla
        tblProductos.setModel(modelo);
        //Pone los encabezados de las columnas
        modelo.addColumn("Id Producto");
        modelo.addColumn("Marca");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio de Compra");
        modelo.addColumn("Venta mayoreo");
        modelo.addColumn("Venta menudeo");
        modelo.addColumn("Existencias");
        //Elimina todas las filas
        modelo.setRowCount(0);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtIdCompraRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdCompraRKeyTyped
        char validar = evt.getKeyChar();
        //Verifica que solo se usen numeros
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "ingresar solo numeros");
        }
    }//GEN-LAST:event_txtIdCompraRKeyTyped

    private void txtCantidadCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadCompraKeyTyped
        char validar = evt.getKeyChar();
        //Verifica que solo se usen numeros
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "ingresar solo numeros");
        }
    }//GEN-LAST:event_txtCantidadCompraKeyTyped

    private void tableProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductosMouseClicked
       //Averigua en qué fila se hizo click
        if (tableProductos != null && tableProductos.getModel() != null) { //Revisa que la tabla no esté vacía
            //Obtiene el numero de la fila y de la columna
            int row = tableProductos.rowAtPoint(evt.getPoint());
            int col = tableProductos.columnAtPoint(evt.getPoint());
            if (tableProductos.getValueAt(row, col) != null) {
                String st = tableProductos.getModel().getValueAt(row, 0).toString();
                System.out.println(st);
                idProd = Integer.parseInt(st);
            }

        }
    }//GEN-LAST:event_tableProductosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminCompras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadirCompra;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarProveedor;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable tableCarrito;
    private javax.swing.JTable tableProductos;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtCantidadCompra;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtFechaCompra;
    private javax.swing.JTextField txtIdCompra;
    private javax.swing.JTextField txtIdCompraR;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtMontoCompra;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JButton txtRegistrar;
    // End of variables declaration//GEN-END:variables
}
